spring.application.name=GovRestApi
server.port=8090

# H2 설정
spring.datasource.driverClassName=org.h2.Driver
# embedded Mode : db 데이터 저장 위치 설정
# spring.datasource.url=jdbc:h2:~/springdb <--오류발생. datasource url을 지정할 때 TCP 연결을 설정해야 함
spring.datasource.url=jdbc:h2:tcp://localhost/~/springdb
spring.datasource.username=sa
spring.datasource.password=manager
# H2 데이터베이스용 Hibernate dialect(JPA가 사용할 데이터베이스 플랫폼을 지정한다)
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# generate-ddl=true : true로 설정하면 해당 데이터를 근거로 서버 시작 시점에 DDL문을 생성하여 DB에 적용
spring.jpa.generate-ddl=true
# ddl-auto = create:테이블 자동 생성, create-drop:애플리케이션이 종료될 때 테이블 삭제, 
#            update:테이블이 없으면 새로 생성, 기존 테이블이 존재하면 새로운 컬럼이 추가되는 변경사항만 반영
#            validate:엔티티 클래스와 테이블이 정상적으로 매핑되는지만 검사, none:4가지 경우를 제외한 모든 경우에 해당
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.show-sql=true

# H2 Console 활성화
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Thymeleaf
spring.thymeleaf.suffix=.html
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true

#swagger-ui 설정
#swagger-ui 접속 경로(http://localhost:4000/swagger-ui/index.html)
#springdoc.swagger-ui.path=/swagger-ui..html

#OpenAPI JSON 문서 확인 주소 (http://localhost:4000/api-docs)
springdoc.api-docs.path=/api-docs

#기본 요청 컨텐츠 json
springdoc.default-consumes-media-type=application/json;charset=UTF-8
springdoc.default-produces-media-type=application/json;charset=UTF-8

#ui 알파벳 순 정렬
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.tags-sorter=alpha

#swagger url 비활성화, json화 된 config 파일 대신 파라미터를 이용하여 swagger-ui에 접근하도록 함
springdoc.swagger-ui.disable-swagger-default-url=true
#springdoc.swagger-ui.display-query-params-without-oauth2=true
springdoc.swagger-ui.doc-expansion=none

# swaggerdoc
springdoc.version=v1.0.0
springdoc.packages-to-scan=com.gov.restapi.GovRestApi
springdoc.api-docs.groups.enabled=true
springdoc.cache.disabled=true

# Upload 디렉토리 경로 설정
upload.path=src/main/resources/static/uploads/

# upload file size 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB