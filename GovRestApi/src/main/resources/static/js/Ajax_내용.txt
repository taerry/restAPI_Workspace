* Ajax는 Asynchronous JavaScript and XML의 약자로, 
  말 그대로 JavaScript와 XML을 이용한 비동기적 정보 교환 기법이다. 
  다만 요즘은 XML보다는 JSON을 주로 사용한다. 
  
* 브라우저의 XMLHttpRequest를 이용해 전체 페이지를 새로 가져오지 않고도 
  페이지 일부만을 변경할 수 있도록 javascript를 실행해 서버에 데이터만을 
  별도로 요청하는 기법이다.

 * HTTP 프로토콜을 이용한 비동기 통신이며 브라우저는 정적 HTML 파일과 CSS파일, 
   데이터를 어떻게 요청하면 되는지를 설명한 javascript를 통해 
   HTML,CSS를 이용해 골격을 먼저 형성하고 
   ajax 실행 부가 담긴 javascript 영역을 실행하여 데이터를 별도로 가져와 
   적절한 방법으로 데이터를 끼워 넣은 후 페이지를 로딩한다.

* Ajax 실행 : javascript에 작성해야 하는 Ajax를 실행하는 방법
  - jQuery를 사용하기 전에는 Ajax 사용법을 통해 바닐라-js에서 실행하였으나 
    jQuery 점유율이 올라가며 Ajax도 주로 jQuery를 이용해 실행한다.
----------------------------------------------------------------------------------
$.ajax({
    url: '/perform/getRelayList.ajax',
    method: 'post',
    data : form,
    dataType : 'html',
    success: function (data, status, xhr) {
        console.log("data : : " + JSON.stringify(data));
        $("#search_result").empty();
        $("#search_result").replaceWith(data);
    },
    error: function (data, status, err) {
    },
    complete: function () {
        var total = $("#dataCount").val();
        $("#totalCount").text(addComma(total));
    }
});
----------------------------------------------------------------------------------

* Ajax에서 자주 사용하는 설정값
  - url : ajax가 요청할 매핑된 url 입력
  - type : HTTP 통신의 종류를 설정. PUT, DELETE는 모든 브라우저에서 지원하는 것이 
           아니기 때문에 주의가 필요. 기본값(default) : GET
  - dataType : ajax를 통해 리턴받을 데이터의 타입을 설정. 생략했을 경우는, 
           jQuery이 MIME 타입 등을 보면서 자동으로 결정
    # Type : XML, JSON, HTML, SCRIPT, JSONP, TEXT
  - data : URL 파라미터를 통해 보낼 데이터. 종류 : Object or String or Array
    # Object는 key:value set 객체여야 하며 value 영역이 array일 경우 jQuery가 
      serialize를 해줌. value 영역이 String이 아닌 경우 String으로 변환한 뒤 전송됨
      

    